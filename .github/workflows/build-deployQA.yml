name: Build and deploy CI for QA

on: workflow_dispatch

jobs:
  buildqa:
    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Checkout submodules
        run: git submodule update --init --recursive --remote
      - name: Change submodule branch
        run: |
          cd ./demoqa/src/main/resources/static/
          cat .git
          cat ../../../../../.git/modules/demoqa/src/main/resources/static/config
          git remote update
          git remote -v
          git fetch
          git fetch --all
          git branch -av
          git branch
          git branch -r
          git checkout master
          git pull origin master
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: go to demoqa
        run: cd ./demoqa
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./demoqa
      - name: change branch
        run: |
          cat ./src/main/resources/static/index.html 
          sed -i -e "s/%branch%/${{ steps.extract_branch.outputs.branch }}/g" ./src/main/resources/static/index.html
          cat ./src/main/resources/static/index.html 
        working-directory: ./demoqa
      # - name: Gradle wrapper
      #   run: gradle wrapper
      #   working-directory: ./demoqa
      - name: Clean
        run: ./gradlew clean
        working-directory: ./demoqa
      - name: Assemble
        run: ./gradlew assemble
        working-directory: ./demoqa
      - name: test
        run: ./gradlew test
        working-directory: ./demoqa
      - uses: actions/upload-artifact@v2
        with:
          name: demoqa-jar
          path: ./demoqa/build/libs/demoqa-0.0.1.jar

  deployqa:
    needs: buildqa
    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: demoqa-jar
          path: ./demoqa

      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_QA }}

        #hashtag pour les gars

      - name: Build and push Docker image
        uses: docker/build-push-action@v2.3.0
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}:QA
          context: ./demoqa
