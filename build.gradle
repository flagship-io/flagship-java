apply plugin: 'io.github.gradle-nexus.publish-plugin'
buildscript {
    ext {
        maven_artifact_id = "flagship-java"
        maven_repo = "flagship-java"
        maven_group_id = "com.abtasty"
        maven_user_org = "abtasty"

        flagship_version_name = System.getenv('FLAGSHIP_VERSION_NAME') ?: "3.0.8"
        flagship_version_code = System.getenv('FLAGSHIP_VERSION_CODE') ?: 15
        sonatype_signing_key = System.getenv('SONATYPE_SIGNING_KEY')
        sonatype_signing_pwd = System.getenv('SONATYPE_SIGNING_PWD')
        sonatype_username = System.getenv('SONATYPE_USERNAME') ?: ossrhUsername
        sonatype_password = System.getenv('SONATYPE_PASSWORD') ?: ossrhPassword
        sonatype_repository_id = System.getenv('SONATYPE_REPOSITORY') ?: stagingRepositoryId
    }

    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "io.github.gradle-nexus:publish-plugin:1.3.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.7.0"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            stagingProfileId = sonatype_repository_id
            username = sonatype_username
            password = sonatype_password
        }
    }
}

apply plugin: "org.springframework.boot"

task clean(type: Delete) {
    delete rootProject.buildDir
}