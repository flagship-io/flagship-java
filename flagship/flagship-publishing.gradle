apply plugin: 'signing'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'

java {
    withJavadocJar()
    withSourcesJar()
}

project(':flagship') {
    publishing {
        publications {
            jar(MavenPublication) {
                groupId = maven_group_id
                artifactId = maven_artifact_id
                version = flagship_version_name
                from components.java
                pom {
                    name = maven_artifact_id
                    description = 'Visit https://developers.flagship.io/ to get started with Flagship.'
                    url = 'https://github.com/flagship-io/flagship-android'
                    licenses {
                        license {
                            name = 'Apache License 2.0'
                            url = 'https://github.com/flagship-io/flagship-android/blob/master/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id = 'raf-abtasty'
                            name = 'Raphael'
                            email = 'raphael@abtasty.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:github.com/flagship-io/flagship-android.git'
                        developerConnection = 'scm:git:ssh:github.com/flagship-io/flagship-android.git'
                        url = 'https://github.com/flagship-io/flagship-android/blob/master/'
                    }
                }
            }
        }

        repositories {
            maven {
                name = "OSSRH"
                url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                credentials {
                    username = sonatype_username
                    password = sonatype_password
                }
            }
        }
    }
}

signing {
    if (sonatype_signing_key && sonatype_signing_pwd)
        useInMemoryPgpKeys(sonatype_signing_key, sonatype_signing_pwd)
    sign publishing.publications.jar
}

tasks.withType(GenerateModuleMetadata) {
    enabled = false
}